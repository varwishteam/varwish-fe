{"version":3,"sources":["actions/userActions.js","actions/wishlistsActions.js","store.js","reducers/wishlistsReducer.js","reducers/userReducer.js","config.js","components/AuthButton.js","utils/api.js","pages/Home.js","pages/Login.js","pages/WishlistDetail.js","components/layout/NavBar.js","components/layout/Menu.js","components/Layout.js","pages/NotFound.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["USER","CREATE","UPDATE","DELETE","LOGIN","SUCCESS","ERROR","LOGIN_","LOGOUT","WISHLIST","rootReducer","combineReducers","wishlistsReducer","state","arguments","length","undefined","action","type","Object","objectSpread","wishlists","concat","toConsumableArray","payload","filter","wishlist","id","userReducer","user","isLoggedIn","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","persistor","persistStore","config","apiUrl","originUrl","AuthButton","withRouter","_ref","history","react_default","a","createElement","className","onClick","setTimeout","push","dispatch","react_router_dom","to","color","connect","Fragment","components_AuthButton","Login","username","password","rememberMe","redirectToReferrer","login","e","email","preventDefault","_this","Promise","resolve","reject","fetch","method","headers","Content-Type","Origin","body","JSON","stringify","then","response","ok","json","res","firstName","lastName","err","non_field_errors","catch","console","error","setState","errorMessage","handleChange","name","event","defineProperty","target","value","from","this","props","location","pathname","_this$state","react_router","role","placeholder","onChange","htmlFor","Component","WishlistDetail","NavBar","data-toggle","data-target","aria-expanded","Menu","Layout","children","aria-hidden","NotFound","PrivateRoute","_ref2","component","rest","objectWithoutProperties","assign","render","exact","path","Home","App","es","integration_react","loading","basename","components_Routes","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bbf72608.chunk.js","sourcesContent":["/**\n * Redux user actions\n */\n\nexport const USER = {\n  CREATE: 'USER_CREATE',\n  UPDATE: 'USER_UPDATE',\n  DELETE: 'USER_DELETE',\n  LOGIN: {\n    SUCCESS: 'USER_LOGIN_SUCCESS',\n    ERROR: 'USER_LOGIN_ERROR'\n  },\n  LOGIN_: 'USER_LOGIN_ERROR',\n  LOGOUT: 'USER_LOGOUT'\n};\n","/**\n * Redux wishlists actions\n */\n\nexport const WISHLIST = {\n  CREATE: 'WISHLIST_CREATE',\n  UPDATE: 'WISHLIST_UPDATE',\n  DELETE: 'WISHLIST_UPDATE'\n};\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport userReducer from './reducers/userReducer';\nimport wishlistsReducer from './reducers/wishlistsReducer';\n\n/**\n * Redux, redux-persist, redux-thunk and Redux Dev Tools setup\n */\n\nconst rootReducer = combineReducers({\n  wishlistsReducer,\n  userReducer\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n  persistedReducer,\n  {\n    userReducer: {\n      isLoggedIn: false\n    }\n  },\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\n      : f => f // just a dummy function\n  )\n);\n\nexport const persistor = persistStore(store);\n","import { WISHLIST } from '../actions/wishlistsActions';\n\n/**\n * Wishlists reducer, handles the manipulation of state for dispatched WISHLIST actions\n * @param {*} state\n * @param {type, payload} action\n */\nexport default function wishlistsReducer(state = {}, action) {\n  switch (action.type) {\n    case WISHLIST.CREATE:\n      return { ...state, wishlists: [...state.wishlists, action.payload] };\n\n    case WISHLIST.UPDATE:\n      return {\n        ...state,\n        wishlists: [\n          state.wishlists.filter(wishlist => wishlist.id !== action.payload.id),\n          action.payload\n        ]\n      };\n\n    case WISHLIST.DELETE: {\n      return {\n        ...state,\n        wishlists: [\n          state.wishlists.filter(wishlist => wishlist.id !== action.payload.id)\n        ]\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { USER } from '../actions/userActions';\n\n/**\n * User reducer, handles the manipulation of state for dispatched USER actions\n * @param {*} state\n * @param {type, payload} action\n */\nexport default function userReducer(state = {}, action) {\n  switch (action.type) {\n    case USER.CREATE:\n      return { ...state, user: action.payload };\n\n    case USER.UPDATE:\n      return {\n        ...state,\n        user: action.payload\n      };\n\n    case USER.DELETE: {\n      return {\n        ...state,\n        user: {}\n      };\n    }\n\n    case USER.LOGIN.SUCCESS: {\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: action.payload\n      };\n    }\n\n    case USER.LOGIN.ERROR: {\n      return {\n        ...state,\n        isLoggedIn: false\n      };\n    }\n\n    case USER.LOGOUT: {\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: {}\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","/**\n * All configuration in one place\n */\nconst config = {\n  apiUrl: 'https://varwish-be.herokuapp.com/', // Our backend\n  originUrl: 'https://varwishteam.github.io/varwish-fe/' // Sent in request header, because of CORS\n};\n\nexport default config;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { logOut } from '../utils/api';\nimport { connect } from 'react-redux';\n\n/**\n * This button displays 'Log In' when the user first comes to the page\n * and 'Log Out' when the user is logged in\n */\nconst AuthButton = withRouter(({ history, isLoggedIn }) =>\n  isLoggedIn ? (\n    <button\n      type=\"button\"\n      className=\"btn btn-primary btn-block list-group-item\"\n      onClick={() => {\n        logOut(() => history.push('/'));\n      }}\n    >\n      <i className=\"material-icons\">close</i>\n      Log Out\n    </button>\n  ) : (\n    <Link to=\"/login\" color=\"inherit\">\n      <button type=\"button\" className=\"btn btn-primary\">\n        Log In\n      </button>\n    </Link>\n  )\n);\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.userReducer.isLoggedIn\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AuthButton);\n","import { USER } from '../actions/userActions';\nimport { store } from '../store';\nimport config from '../config.js';\n/**\n * All api call wrappers go in this file\n */\n\nfunction logIn(email, password) {\n  return new Promise((resolve, reject) => {\n    fetch(config.apiUrl + 'rest-auth/login/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Origin: config.originUrl\n      },\n      body: JSON.stringify({\n        username: email,\n        password: password\n      })\n    })\n      .then(response => {\n        if (response.ok) {\n          response.json().then(res => {\n            store.dispatch({\n              type: USER.LOGIN.SUCCESS,\n              payload: {\n                firstName: 'John', // FIXME: Name is just a placeholder\n                lastName: 'Doe',\n                key: res.key\n              }\n            });\n            resolve();\n          });\n        } else {\n          response\n            .json()\n            .then(err => {\n              reject(err.non_field_errors[0]); // FIXME: Rewrite to accept all kinds or errors\n            })\n            .catch(err => {\n              console.error(err);\n              reject('Error logging in.');\n            });\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        reject('Login error'); // FIXME: add proper error message\n      });\n  });\n}\n\nfunction logOut(callback) {\n  setTimeout(callback, 100);\n  store.dispatch({\n    type: USER.LOGOUT\n  });\n}\n\nexport { logIn, logOut };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport AuthButton from '../components/AuthButton';\n\n/**\n * Home page, contains a list of wishlists\n */\nfunction Home({ user, isLoggedIn }) {\n  if (isLoggedIn) {\n    return (\n      <main className=\"d-flex flex-row flex-wrap\">\n        <Link to=\"/wishlists/1\" className=\"w-50\">\n          <button type=\"button\" className=\"btn btn-primary\">\n            Wishlist 1\n          </button>\n        </Link>\n        <Link to=\"/wishlists/2\" className=\"w-50\">\n          <button type=\"button\" className=\"btn btn-primary\">\n            Wishlist 2\n          </button>\n        </Link>\n        <Link to=\"/wishlists/3\" className=\"w-50\">\n          <button type=\"button\" className=\"btn btn-primary\">\n            Wishlist 3\n          </button>\n        </Link>\n      </main>\n    );\n  } else {\n    return (\n      <>\n        <nav className=\"navbar navbar-dark bg-dark\">\n          <span className=\"navbar-brand mb-0 h1\">VarWish</span>\n          <AuthButton type=\"button\" />\n        </nav>\n        Not logged in\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.userReducer.user,\n  isLoggedIn: state.userReducer.isLoggedIn\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Home);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { logIn } from '../utils/api';\nimport './login/Login.scss';\n\n/**\n * Login page, a simple form with these fields: Username or Email, Password\n * and a RememberMe checkbox\n */\nexport default class Login extends Component {\n  state = {\n    username: '',\n    password: '',\n    rememberMe: 'yes',\n    redirectToReferrer: false\n  };\n\n  login = e => {\n    e.preventDefault();\n    logIn(this.state.username, this.state.password)\n      .then(() => {\n        this.setState({ redirectToReferrer: true });\n      })\n      .catch(error => {\n        this.setState({ errorMessage: error });\n      });\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  render() {\n    const { from } = this.props.location.state || { from: { pathname: '/' } };\n    const {\n      username,\n      password,\n      rememberMe,\n      errorMessage,\n      redirectToReferrer\n    } = this.state;\n\n    if (redirectToReferrer) return <Redirect to={from} />;\n\n    return (\n      <div className=\"wrapper\">\n        <form className=\"form-login\">\n          <h1 className=\"h3 mb-3 font-weight-normal\">Please log in</h1>\n\n          {errorMessage && (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              {errorMessage}\n            </div>\n          )}\n\n          <div className=\"bmd-form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"email\"\n              placeholder=\"Username or Email\"\n              value={username}\n              onChange={this.handleChange('username')}\n            />\n          </div>\n\n          <div className=\"bmd-form-group\">\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={this.handleChange('password')}\n            />\n          </div>\n\n          <div className=\"checkbox-inline\">\n            <label htmlFor=\"rememberMe\">\n              <input\n                type=\"checkbox\"\n                id=\"rememberMe\"\n                value={rememberMe}\n                onChange={this.handleChange('rememberMe')}\n              />\n              Remember me\n            </label>\n          </div>\n\n          <button\n            className=\"btn btn-lg btn-primary btn-block btn-outline\"\n            onClick={this.login}\n          >\n            Log in\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\n/**\n * Wishlist detailed view, with options to edit/detele the wishlist and manage it's items, tags etc.\n */\nexport default class WishlistDetail extends Component {\n  render() {\n    return <div>WishlistDetail</div>;\n  }\n}\n","import React from 'react';\n\n/**\n * Top navigation bar as known from native mobile apps\n * Is visible only on mobile devices\n */\nexport default function NavBar() {\n  return (\n    <>\n      <div className=\"navbar navbar-light bg-faded\">\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"drawer\"\n          data-target=\"#main-drawer\"\n          aria-expanded=\"false\"\n        >\n          <span className=\"sr-only\">Toggle drawer</span>\n          <i className=\"material-icons\">menu</i>\n        </button>\n        <ul className=\"nav navbar-nav\">\n          <li className=\"nav-item\">VarWish</li>\n        </ul>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthButton from '../AuthButton';\n\n/**\n * The content for the drawer\n * In the first list are main navigation routes\n * The second list contains user/account/profile centric actions (Log Out etc.)\n */\nexport default function Menu() {\n  return (\n    <div className=\"d-flex flex-column justify-content-between flex-grow-1\">\n      <ul className=\"nav flex-column border-bottom\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link p-0\" to=\"/\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary btn-block list-group-item\"\n              data-toggle=\"drawer\"\n              data-target=\"#main-drawer\"\n            >\n              Wishlists\n            </button>\n          </Link>\n        </li>\n      </ul>\n\n      <ul className=\"nav flex-column border-top\">\n        <li>\n          <AuthButton />\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\nimport NavBar from './layout/NavBar';\nimport Menu from './layout/Menu';\n\n/**\n * Layout with side drawer and navbar on mobile\n * The drawer is permanently vidible on desktop and cannot be hidden by the user\n * and hidden by default on mobile and can be triggered by the \"hamburger\" button\n * in the NavBar\n *\n * @param {*} children DOM Node containing the main content\n */\nexport default function Layout({ children }) {\n  return (\n    <div className=\"position-relative vw-100 vh-100\">\n      <div className=\"bmd-layout-container bmd-drawer-f-l bmd-drawer-in-lg-up bmd-drawer-overlay-md-down\">\n        <header className=\"bmd-layout-header d-lg-none\">\n          <NavBar />\n        </header>\n        <div\n          id=\"main-drawer\"\n          className=\"bmd-layout-drawer bg-faded\"\n          aria-expanded=\"false\"\n          aria-hidden=\"true\"\n        >\n          <header className=\"d-flex flex-column align-items-center\">\n            <i className=\"material-icons md-48\">list_alt</i>\n            <span className=\"h3 navbar-brand font-weight-bold\">VarWish</span>\n          </header>\n          <Menu />\n        </div>\n        <main className=\"bmd-layout-content\">\n          <div className=\"container-fluid p-4\">{children}</div>\n        </main>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function NotFound() {\n  return (\n    <div className=\"d-flex flex-column align-items-center\">\n      <h1>404</h1>\n      <p className=\"h2\">Not found</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Home from '../pages/Home';\nimport Login from '../pages/Login';\nimport WishlistDetail from '../pages/WishlistDetail';\nimport Layout from './Layout';\nimport NotFound from '../pages/NotFound';\n\n/**\n * All first-level routes go here\n * The HomePage for guest(not authenticated) users and Login/Signup pages are standalone\n * All other pages have the drawer/NavBar added by the Layout component\n *\n * PrivateRoutes are protected from non-authenticated users, redirect to Login page\n *\n * @prop {*} isLoggedIn Informatin about user's logged-in state\n */\nfunction Routes({ isLoggedIn }) {\n  return (\n    <>\n      <Switch>\n        {!isLoggedIn && <Route exact path=\"/\" component={Home} />}\n        <Route path=\"/login\" component={Login} />\n        {/* <Route path=\"/signup\" component={SignUp} /> */}\n        <Layout>\n          <Switch>\n            {isLoggedIn && <Route exact path=\"/\" component={Home} />}\n            <PrivateRoute\n              path=\"/wishlists/:wishlistId\"\n              component={WishlistDetail}\n              isLoggedIn={isLoggedIn}\n            />\n            {/* <PrivateRoute\n        path=\"/wishlists/:wishlistId/items/:itemId\"\n        component={ItemDetail}\n      /> */}\n            <Route component={NotFound} />\n          </Switch>\n        </Layout>\n      </Switch>\n    </>\n  );\n}\n\n/**\n * This component automatically redirects unauthenticated users to the Login page\n */\nfunction PrivateRoute({ component: Component, isLoggedIn, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.userReducer.isLoggedIn\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Routes);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport Routes from './components/Routes';\nimport { store, persistor } from './store';\n\n/**\n * The base of the app, setup for redux, redux-persist, material-ui theme and react-router\n */\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <PersistGate\n          loading={\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          }\n          persistor={persistor}\n        >\n          <Router basename=\"/varwish-fe\">\n            <Routes />\n          </Router>\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}